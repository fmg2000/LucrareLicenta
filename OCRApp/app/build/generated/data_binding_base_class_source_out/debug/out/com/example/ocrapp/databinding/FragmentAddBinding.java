// Generated by view binder compiler. Do not edit!
package com.example.ocrapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ocrapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout addFragment;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final ImageButton buttonCapture;

  @NonNull
  public final EditText dateEditText;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final EditText locationEditText;

  @NonNull
  public final ImageButton selectDate;

  @NonNull
  public final EditText sumEditText;

  private FragmentAddBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout addFragment, @NonNull Button btnAdd,
      @NonNull ImageButton buttonCapture, @NonNull EditText dateEditText,
      @NonNull ImageView imageView, @NonNull EditText locationEditText,
      @NonNull ImageButton selectDate, @NonNull EditText sumEditText) {
    this.rootView = rootView;
    this.addFragment = addFragment;
    this.btnAdd = btnAdd;
    this.buttonCapture = buttonCapture;
    this.dateEditText = dateEditText;
    this.imageView = imageView;
    this.locationEditText = locationEditText;
    this.selectDate = selectDate;
    this.sumEditText = sumEditText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout addFragment = (ConstraintLayout) rootView;

      id = R.id.btnAdd;
      Button btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.buttonCapture;
      ImageButton buttonCapture = ViewBindings.findChildViewById(rootView, id);
      if (buttonCapture == null) {
        break missingId;
      }

      id = R.id.dateEditText;
      EditText dateEditText = ViewBindings.findChildViewById(rootView, id);
      if (dateEditText == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.locationEditText;
      EditText locationEditText = ViewBindings.findChildViewById(rootView, id);
      if (locationEditText == null) {
        break missingId;
      }

      id = R.id.selectDate;
      ImageButton selectDate = ViewBindings.findChildViewById(rootView, id);
      if (selectDate == null) {
        break missingId;
      }

      id = R.id.sumEditText;
      EditText sumEditText = ViewBindings.findChildViewById(rootView, id);
      if (sumEditText == null) {
        break missingId;
      }

      return new FragmentAddBinding((ConstraintLayout) rootView, addFragment, btnAdd, buttonCapture,
          dateEditText, imageView, locationEditText, selectDate, sumEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
